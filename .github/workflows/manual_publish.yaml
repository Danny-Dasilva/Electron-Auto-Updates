name: "ðŸ”§ ðŸš€ ðŸŸ¢ Manual publish"

on:
  workflow_dispatch:
    inputs:
      releaseCandidate:
        description: "Release Candidate"
        required: true
        default: "patch"
jobs:
  release:
    name: ðŸš€ Manual publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: ðŸŸ¢ Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - name: set github name
        run: git config --global user.name 'Danny-Dasilva'
      - name: set github  email
        run: git config --global user.email 'secrets.EMAIL'
      
  
      - name: Retrieve Current Version
        run: |
          echo "CURRENT_VERSION=$(node -p "try { require('./package.json').version } catch(e) {}")" >> $GITHUB_ENV
        id: current

      - name: Update to latest version
        run: |
          npm version ${{ env.CURRENT_VERSION }} --allow-same-version
      - name: bump version
        run: |
          if [[ "${{ github.event.inputs.releaseCandidate }}" == "alpha" ]]; then
              npm version prerelease --preid alpha
          fi
          if [[ "${{ github.event.inputs.releaseCandidate }}" == "beta" ]]; then
              npm version prerelease --preid beta
          fi
          if [[ "${{ github.event.inputs.releaseCandidate }}" == "patch" ]]; then
              npm version patch -m "v%s"
          fi


      # - name: Add file (THESE TWO ACTIONS GET DONE BY THE PATCH COMMAND)
      #   run: git add *
      # - name: Commit Version Bump
      #   run: git commit -a -m "v${{ env.UPDATED_VERSION }}""
      # - name: Tag commit
      #   run: git tag v${{ env.UPDATED_VERSION }}
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          release: True
      - name: Push git
        run: git push && git push --tags